---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: classroom
  name: uploader
  labels:
    name: uploader
spec:
  replicas: 1
  selector:
    matchLabels:
      name: uploader
  template:
    metadata:
      namespace: classroom
      labels:
        name: uploader
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      enableServiceLinks: true
      containers:
      - image: "wildflowerschools/classroom-video-uploader:v44"
        name: uploader
        command: ["python", "-m", "uploader.__init__"]
        securityContext:
          privileged: true
        env:
          - name: MINIO_BUCKET_NAME
            value: "videos"
          - name: MINIO_HOST
            value: "minio.classroom:9000"
          - name: UPLOADER_REDIS_HOST
            value: "redis.classroom.svc.cluster.local"
          - name: TELEGRAF_HOST
            value: telegraf.tick.svc.cluster.local
        envFrom:
          - secretRef:
              name: minio-settings
          - secretRef:
              name: honeycomb-client-settings
        volumeMounts:
        - name: boot
          mountPath: /boot
      volumes:
        - name: boot
          hostPath:
            path: /boot
            type: Directory


---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: classroom
  name: uploader-cleanup-active
  labels:
    name: uploader-cleanup-active
spec:
  replicas: 1
  selector:
    matchLabels:
      name: uploader-cleanup-active
  template:
    metadata:
      namespace: classroom
      labels:
        name: uploader-cleanup-active
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      enableServiceLinks: true
      nodeSelector:
        wildflower-type: control
      containers:
      - image: "wildflowerschools/classroom-video-uploader:v44"
        name: uploader-cleanup-active
        command: ["python", "-m", "uploader.cleanup", "--action", "cleanup-active"]
        securityContext:
          privileged: true
        env:
          - name: MINIO_BUCKET_NAME
            value: "videos"
          - name: MINIO_HOST
            value: "minio.classroom:9000"
          - name: UPLOADER_REDIS_HOST
            value: "redis.classroom.svc.cluster.local"
          - name: TELEGRAF_HOST
            value: telegraf.tick.svc.cluster.local
        envFrom:
          - secretRef:
              name: minio-settings
          - secretRef:
              name: honeycomb-client-settings
        volumeMounts:
        - name: boot
          mountPath: /boot
        - name: videos
          mountPath: /videos
      volumes:
        - name: boot
          hostPath:
            path: /boot
            type: Directory
        - name: videos
          hostPath:
            path: /data/videos
            type: Directory

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: classroom
  name: uploader-queue-missed
  labels:
    name: uploader-queue-missed
spec:
  replicas: 1
  selector:
    matchLabels:
      name: uploader-queue-missed
  template:
    metadata:
      namespace: classroom
      labels:
        name: uploader-queue-missed
    spec:
      dnsPolicy: ClusterFirstWithHostNet
      enableServiceLinks: true
      nodeSelector:
        wildflower-type: control
      containers:
      - image: "wildflowerschools/classroom-video-uploader:v44"
        name: uploader-queue-missed
        command: ["python", "-m", "uploader.cleanup", "--action", "queue-missed"]
        securityContext:
          privileged: true
        env:
          - name: MAX_QUEUE
            value: "1600"
          - name: MINIO_BUCKET_NAME
            value: "videos"
          - name: MINIO_HOST
            value: "minio.classroom:9000"
          - name: UPLOADER_REDIS_HOST
            value: "redis.classroom.svc.cluster.local"
          - name: TELEGRAF_HOST
            value: telegraf.tick.svc.cluster.local
        envFrom:
          - secretRef:
              name: minio-settings
          - secretRef:
              name: honeycomb-client-settings
        volumeMounts:
        - name: boot
          mountPath: /boot
      volumes:
        - name: boot
          hostPath:
            path: /boot
            type: Directory
